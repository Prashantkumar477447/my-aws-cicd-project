name: CI/CD Main Branch Deployment

on:
  push:
    branches:
      - main

jobs:
  build-deploy-main:
    runs-on: ubuntu-latest
    steps:
      # Checkout code locally for build
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js locally
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies locally
        run: npm install

      - name: Build application locally
        run: npm run build || echo "No build script, skipping"

      # Copy code to EC2 (no GH_TOKEN needed)
      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_KEY }}
          source: "."
          target: "/home/ubuntu/app"
          recursive: true
          clean: true

      # Install Node/PM2 & start app on EC2
      - name: Start app on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_KEY }}
          script: |
            cd /home/ubuntu/app
            export DEBIAN_FRONTEND=noninteractive

            # Install Node.js if missing
            if ! command -v node &> /dev/null; then
              curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
              sudo apt-get update -y
              sudo apt-get install -y nodejs
            fi

            # Install PM2 if missing
            if ! command -v pm2 &> /dev/null; then
              sudo npm install -g pm2
            fi

            # Install project dependencies
            npm install

            # Restart app using PM2
            pm2 delete my-aws-cicd-app || true
            pm2 start ecosystem.config.js

      # Send approval email for dev branch
      - name: Send approval email for dev deployment
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "Main branch deployed successfully. Approve dev branch deployment"
          body: "Main branch is live. Please approve dev deployment in GitHub Actions."
          to: ${{ secrets.MAIL_RECEIVER }}
          from: ${{ secrets.MAIL_USERNAME }}
