name: CI/CD Main Branch Deployment

on:
  push:
    branches:
      - main

jobs:
  build-deploy-main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js locally
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies locally
        run: npm install

      - name: Build application locally
        run: npm run build || echo "No build script, skipping"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_KEY }}
          script: |
            #!/bin/bash
            cd /home/ubuntu

            # Set non-interactive frontend for apt
            export DEBIAN_FRONTEND=noninteractive

            # Install Node.js if not installed
            if ! command -v node &> /dev/null; then
              curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
              sudo apt-get update -y
              sudo apt-get install -y nodejs
            fi

            # Install PM2 if not installed
            if ! command -v pm2 &> /dev/null; then
              sudo npm install -g pm2
            fi

            # Clone repo if it doesn't exist
            if [ ! -d "app/.git" ]; then
              git clone https://github.com/<owner>/<repo>.git app
            fi

            cd app

            # Fetch and checkout main branch
            git fetch --all
            git checkout main
            git pull origin main

            # Install project dependencies
            npm install

            # Restart application using PM2
            pm2 delete my-aws-cicd-app || true
            GIT_BRANCH=main pm2 start ecosystem.config.js

      - name: Send approval email for dev deployment
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "Main branch deployed successfully. Approve dev branch deployment"
          body: "Main branch is live. Please approve dev deployment in GitHub Actions."
          to: ${{ secrets.MAIL_RECEIVER }}
          from: ${{ secrets.MAIL_USERNAME }}
